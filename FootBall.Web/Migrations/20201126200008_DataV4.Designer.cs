// <auto-generated />
using System;
using FootBall.Web.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FootBall.Web.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20201126200008_DataV4")]
    partial class DataV4
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FootBall.Web.Data.Entities.ClassificationEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ClubId");

                    b.Property<int>("GamesLost");

                    b.Property<int>("GamesPlayed");

                    b.Property<int>("GamesTied");

                    b.Property<int>("GamesWon");

                    b.Property<int>("GoalsAgainst");

                    b.Property<int>("GoalsFor");

                    b.Property<int?>("TournamentId");

                    b.HasKey("Id");

                    b.HasIndex("ClubId");

                    b.HasIndex("TournamentId");

                    b.ToTable("Classifications");
                });

            modelBuilder.Entity("FootBall.Web.Data.Entities.ClubEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsActive");

                    b.Property<bool>("LigaMX");

                    b.Property<string>("LogoPath");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Clubs");
                });

            modelBuilder.Entity("FootBall.Web.Data.Entities.GameEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("GameDate");

                    b.Property<int>("GoalsLocal");

                    b.Property<int>("GoalsVisitor");

                    b.Property<int?>("LocalId");

                    b.Property<bool>("Played");

                    b.Property<int?>("ResultId");

                    b.Property<int?>("SessionId");

                    b.Property<int?>("VisitorId");

                    b.Property<int>("YellowCards");

                    b.HasKey("Id");

                    b.HasIndex("LocalId");

                    b.HasIndex("ResultId");

                    b.HasIndex("SessionId");

                    b.HasIndex("VisitorId");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("FootBall.Web.Data.Entities.ResultEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Results");
                });

            modelBuilder.Entity("FootBall.Web.Data.Entities.SessionEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsActive");

                    b.Property<DateTime>("LimitDate");

                    b.Property<string>("Name");

                    b.Property<int?>("TournamentId");

                    b.HasKey("Id");

                    b.HasIndex("TournamentId");

                    b.ToTable("Sessions");
                });

            modelBuilder.Entity("FootBall.Web.Data.Entities.TournamentEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("EndDate");

                    b.Property<bool>("IsActive");

                    b.Property<string>("LogoPath");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<DateTime>("StartDate");

                    b.HasKey("Id");

                    b.ToTable("Tournaments");
                });

            modelBuilder.Entity("FootBall.Web.Data.Entities.ClassificationEntity", b =>
                {
                    b.HasOne("FootBall.Web.Data.Entities.ClubEntity", "Club")
                        .WithMany("Classifications")
                        .HasForeignKey("ClubId");

                    b.HasOne("FootBall.Web.Data.Entities.TournamentEntity", "Tournament")
                        .WithMany("Classifications")
                        .HasForeignKey("TournamentId");
                });

            modelBuilder.Entity("FootBall.Web.Data.Entities.GameEntity", b =>
                {
                    b.HasOne("FootBall.Web.Data.Entities.ClubEntity", "Local")
                        .WithMany()
                        .HasForeignKey("LocalId");

                    b.HasOne("FootBall.Web.Data.Entities.ResultEntity", "Result")
                        .WithMany("Games")
                        .HasForeignKey("ResultId");

                    b.HasOne("FootBall.Web.Data.Entities.SessionEntity", "Session")
                        .WithMany("Games")
                        .HasForeignKey("SessionId");

                    b.HasOne("FootBall.Web.Data.Entities.ClubEntity", "Visitor")
                        .WithMany()
                        .HasForeignKey("VisitorId");
                });

            modelBuilder.Entity("FootBall.Web.Data.Entities.SessionEntity", b =>
                {
                    b.HasOne("FootBall.Web.Data.Entities.TournamentEntity", "Tournament")
                        .WithMany("Sessions")
                        .HasForeignKey("TournamentId");
                });
#pragma warning restore 612, 618
        }
    }
}
